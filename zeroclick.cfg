#...................................................................................................
# ZeroClick Probe Safety Checks


[gcode_macro _do_error_if_probe_deployed]
gcode:
    {% if not printer.probe.last_query %}
        {action_raise_error("ERROR: probe still deployed - remove and return to dock.")}
    {% endif %}

[gcode_macro _error_if_probe_deployed]
gcode:
    G4 P300
    QUERY_PROBE
    _do_error_if_probe_deployed

[gcode_macro _do_error_if_probe_not_deployed]
gcode:
    {% if printer.probe.last_query %}
        {action_raise_error("ERROR: probe unsuccessfully deployed.")}
    {% else %}
        {action_respond_info("Probe Attached")}
    {% endif %}

[gcode_macro _error_if_probe_not_deployed]
gcode:
    G4 P300
    QUERY_PROBE
    _do_error_if_probe_not_deployed


## Probe-specific Macros

## Set stow coordinates here
[gcode_macro _ALIGN_POSITION_STOW]
gcode:
      {% set F = 3000 %}   
      G0 Z25 F{F}             ;  set approach elevation of Z25 for fixed gantry system to clear probe over bed
      G0 X20 Y120 F{F}               ;  move to the re-entry staging position

[gcode_macro _POSITION_STOW]
gcode:
      {% set F = 6000 %}  
      G0 X0 Y120 F{F}                 ;  slowly move into dock
      M400                          ;  wait for moves to finish
      G4 P250                       ;  forced pause here so motion is definite 90 tavel to swipe


## Set deployment coordinates here
[gcode_macro _ALIGN_POSITION_DEPLOY]
gcode:
      {% set F = 3000 %} 
      G0 Z15 F{F}         ;  set approach elevation of Z15 to clear probe over bed on fixed gantry machine
      G0 X60 Y60 F{F}           
      G0 X0 F{F} ;  move the carraige to safe position to move from. this is the pre-flight position

[gcode_macro _POSITION_DEPLOY]
gcode:
      {% set F = 1000 %} 
      G0 X0 Y120 F{F}             ;  move sideways over the dock to pick up probe. this is the dock position

# Macro to Deploy Bed Probe
[gcode_macro _PROBE_DEPLOY]
gcode:
    {% set F = 6000 %} 
    G90
    {% if printer.probe.last_query %} 
      _ALIGN_POSITION_DEPLOY
      G4 P250              ;  wait 1/4 second 
      _POSITION_DEPLOY
      M400                 ;  wait for moves to finish
      G4 P250              ;  pause 1/4 sec for detection
      G0 X20 F{F}
      G0 X60 Y60 F{F}
    {% endif %}
    G4 P500
    QUERY_PROBE
    _error_if_probe_not_deployed


# Macro to Stow Bed Leveling Probe
[gcode_macro _PROBE_STOW]
gcode:
    {% set F = 6000 %}
    G90
    {% if not printer.probe.last_query %} ; the logic on this needs function check
      _ALIGN_POSITION_STOW
      _POSITION_STOW
      G0 X0 Y60 F{F}               ;  quick swipe off 
      G0 X60 Y60 F{F}                   ;  move to front center of bed 
      G0 Z20 F500                   ;  move up to elevation of Z20
    {% endif %}                     ;  exit the if-then loop. was missing in previous versions
    _error_if_probe_deployed         ;  verify that the probe is detached. is corrected error  

# M401 - Deploy Euclid Probe
[gcode_macro _M401]
gcode:
    G90
    {% if printer.probe.last_query %}
        _PROBE_DEPLOY
    {% else %}
    	_do_error_if_probe_deployed	
    {% endif %}

[gcode_macro ATTACH_PROBE]
gcode:
    SAVE_GCODE_STATE NAME=attach_probe_state
    G90
    _error_if_probe_deployed    ; check to make sure that the probe is not already attached
    _M401
    RESTORE_GCODE_STATE NAME=attach_probe_state

# M402 - Stow Euclid Probe
[gcode_macro _M402]
gcode:
    G90
    {% if not printer.probe.last_query %}
        _PROBE_STOW
    {% else %}
    	{action_raise_error("Probe is not attached.")}
    {% endif %}

[gcode_macro DETACH_PROBE]
gcode:
    SAVE_GCODE_STATE NAME=detach_probe_state
    G90
    _error_if_probe_not_deployed
    _M402
    RESTORE_GCODE_STATE NAME=detach_probe_state

###################
# Bed tilt calibrate
[gcode_macro Z_TILT_ADJUST]
rename_existing: _Z_TILT_ADJUST 
gcode:
	ATTACH_PROBE

    _Z_TILT_ADJUST {% for p in params
           %}{'%s=%s ' % (p, params[p])}{%
          endfor %}
    DETACH_PROBE

#[gcode_macro BED_TILT_CALIBRATE]
#rename_existing: _BED_TILT_CALIBRATE 
#gcode:
#	ATTACH_PROBE

 #   _BED_TILT_CALIBRATE {% for p in params
   #        %}{'%s=%s ' % (p, params[p])}{%
  #        endfor %}
    #DETACH_PROBE

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE 
gcode:
	ATTACH_PROBE
    _BED_MESH_CALIBRATE {% for p in params     %}{'%s=%s ' % (p, params[p])}{% endfor %}
    DETACH_PROBE

[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    {% set bed_position = params.BED_POSITION|default('None') %}
    G28                         # can also be a conditional homing macro
  
    ATTACH_PROBE                # a macro for fetching the probe first
    {% if bed_position != 'None' %}
      BASE_CALIBRATE_Z BED_POSITION={bed_position}
    {% else %}
      BASE_CALIBRATE_Z
    {% endif %}
    DETACH_PROBE


