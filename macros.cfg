#####################################################################
#   Macros
#####################################################################

[gcode_macro LED_PRINTING]
gcode:
  SET_LED_EFFECT EFFECT=case_printing FADETIME=1.0 
  SET_LED_EFFECT EFFECT=display_printing FADETIME=1.0 

[gcode_macro LED_IDLE]
gcode:
  STOP_LED_EFFECTS
  SET_LED_EFFECT EFFECT=panel_idle FADETIME=1.0 
  SET_LED_EFFECT EFFECT=display_idle FADETIME=1.0 


[gcode_macro PRINT_START]
gcode:

    LED_PRINTING
    {% if "BED" in params %}
    	{% set BED_TEMP = params.BED|default(110)|float %}
    {% elif "material_bed_temperature_layer_0" in params %}
    	{% set BED_TEMP = params.material_bed_temperature_layer_0|default(110)|float %}
    {% else %}
    	{% set BED_TEMP = params.BED_TEMP|default(110)|float %}
    {% endif %}


    {% if "HOTEND" in params %}
    	{% set EXTRUDER_TEMP = params.HOTEND|default(245)|float %}    
    {% elif "material_print_temperature_layer_0" in params %}
        {% set EXTRUDER_TEMP = params.material_print_temperature_layer_0|default(245)|float %}
    {% elif "EXTRUDER" in params %}
        {% set EXTRUDER_TEMP = params.EXTRUDER|default(245)|float %}
    {% else %}
        {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|float %}
    {% endif %}

    M117 Heating Bed
    M140 S{BED_TEMP}
    {% if printer.heater_bed.temperature > BED_TEMP|float*0.85 %}
        M140 S{BED_TEMP}
        M109 S{EXTRUDER_TEMP}
        M190 S{BED_TEMP}
    {% else %}
        M190 S{BED_TEMP|float*0.85} # wait till 0.85 of bed temp is reached, then continue
        M140 S{BED_TEMP}
        M109 S{EXTRUDER_TEMP}
        M190 S{BED_TEMP}
    {% endif %}

    M109 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}

    M117 Homing
    G28                            ; home all axes
    PRIME_NOZZLE
    M117 Printing
    G90                            ; absolute positioning    
    G1 Z20 F3000                   ; move nozzle away from bed
    SONG_CHIME
    LED_PRINTING

   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    SONG_CLASSICAL
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
    LED_IDLE
    
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro PRIME_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE
    M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z10 F900
    G1 Y2 X2 F18000
    G1 Z0.2 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X103 E20 F1000  ; Extrude filament 25mm (how much it retracted in PRINT_END).
    G1 Y-2 F1000
    G1 X-60 E7 F1000    ; Print second part of the line.
    G1 E-0.8 F3000      ; Retract to avoid stringing.
    G1 X0.5 E0 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE
    M117 Primed

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}


[gcode_macro TOGGLE_BEEPER]
description: Toggle the printer beeper on and off.
gcode:
	{% set beeper_state = printer.save_variables.variables.beeper_state|lower %}

	{% if printer['gcode_macro _USER_VARIABLE'].debug == 1 %}
		{action_respond_info('==== TOGGLE_BEEPER ====')}
		{action_respond_info("beeper_state: %s" % (beeper_state))}
		{action_respond_info('===============')}
	{% endif %}

	{% if beeper_state == "off" %}
		{action_respond_info('beeper is off, turning it on')}
		SAVE_VARIABLE VARIABLE=beeper_state VALUE='"on"'
	{% else %}
		{action_respond_info('beeper is on= turning it off')}
		SAVE_VARIABLE VARIABLE=beeper_state VALUE='"off"'
	{% endif %}
	SONG_SINGLE_BEEP


## Beep Macros

[gcode_macro SONG_SINGLE_BEEP]
gcode:
	M300 S830.61 P137

[gcode_macro M300]
gcode:
	{% set S = params.S|default(500)|int %}
	{% set P = params.P|default(10)|int %}

		SET_PIN PIN=beeper VALUE=0.3 CYCLE_TIME={ 1/S if S > 0 else 1 }
		G4 P{P}
		SET_PIN PIN=beeper VALUE=0

